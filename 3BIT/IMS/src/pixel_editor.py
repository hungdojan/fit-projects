import pygame
import os

W_WIDTH=1000
W_HEIGHT=1000
HEIGHT=200
WIDTH=400
HEADER=['// generated by pixel_editor app\n',
        '#include "board_setup.h"\n', 
        '\n', 
        'char INIT_POS[] = {\n',
        '};\n\n',
        '/* board_setup.c */\n'
]

# defining values
NOF_STATES=2
# CHAR_VALUES=[' ', 'x', 'o']
COLORS=[(255, 255, 255),    # white
        (0, 0, 0),          # black
        (255, 0, 0)         # red
]


def load_startup_pos(filename: str) -> list[list[int]]:
    """Loads data from file.

    Parameters:
        filename (str): Path to source file.

    Returns:
        list[list[int]]: 2D list with data.
    """
    l = []
    with open(filename, 'r') as f:
        while not f.readline().startswith(HEADER[2]):
            pass
        f.readline()
        while True:
            line = f.readline()
            if line.startswith('}'):
                break;
            row = [int(d.strip())
                   for d in line.strip().split(',')[0:-1]]
            l.append(row)
    return l


def save_to_file(filename: str, data: list[list[int]]):
    """Save board into file.

    Parameters:
        filename (str): Path to destination file.
        data (list[list[int]]): Board data.
    """
    with open(filename, 'w') as f:
        f.write(HEADER[0])
        f.write(HEADER[1])
        f.write(HEADER[2])
        f.write(HEADER[3])
        for row in data:
            f.write('    ')
            for col in row:
                f.write(f'{col},')
            f.write('\n')

        f.write(HEADER[-2])
        f.write(HEADER[-1])

def draw_board(screen: pygame.surface.Surface, data: list[list[int]]):
    """Draw UI for user to edit initial board used by another application."""
    rect_width = W_WIDTH / WIDTH
    rect_height = W_HEIGHT / HEIGHT
    for i, row in enumerate(data):
        for j, col in enumerate(row):
            pygame.draw.rect(screen, COLORS[col], pygame.Rect(rect_width * j, rect_height * i,rect_width, rect_height))

if __name__ == "__main__":
# init app
    pygame.init()
    screen = pygame.display.set_mode((W_WIDTH, W_HEIGHT))
    pygame.display.set_caption('Pixel maker')

    if not os.path.exists('board_setup.c'):
        # create empty list
        board = [[0 for _ in range(WIDTH)] for _ in range(HEIGHT)]
    else:
        # load from 
        board = load_startup_pos('board_setup.c')

    running = True

    while running:
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

            # keyboard event
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_q:
                    running = False
                if event.key == pygame.K_c:
                    board = [[0 for _ in range(WIDTH)] for _ in range(HEIGHT)]

            # mouse event
            if event.type == pygame.MOUSEBUTTONDOWN:
                mouse_press = pygame.mouse.get_pressed()
                # get mouse coordinates
                pos = pygame.mouse.get_pos()
                x, y = pos[0] // (W_WIDTH // WIDTH), pos[1] // (W_HEIGHT // HEIGHT)
                # left button
                if mouse_press[0]:
                    board[y][x] = (board[y][x] + 1) % NOF_STATES
                # right button
                if mouse_press[2]:
                    board[y][x] = (board[y][x] - 1) % NOF_STATES


        draw_board(screen, board)
        pygame.display.update()

# close data
    save_to_file('board_setup.c', board)
    pygame.quit()
